//NEW 2.0
/*
* Mixin builds media querie define by Boostrap Grid
* @param  {string}  $breakpoint - Bootstrap 4 variable grid breakpoints
* @throws Error unknow breakpoints
* @outputs Media queries strucuture
* @content Css rules to media querie
* @example
    @include respond-to(medium) {
        background-color: #666;
    }
*/
@mixin respond-to($breakpoint) {
  @if map-has-key($grid-breakpoints, $breakpoint) {
    $value: map-get($grid-breakpoints, $breakpoint);

    @media screen and (min-width: $value) {
      @content;
    }
  }
  @warn "Unknown `#{$breakpoint}` in $breakpoints";
}





/// Mixin for writing @font-face rules in SASS.(Use str-replace)
/// @author jonathantneal - https://gist.github.com/jonathantneal/d0460e5c2d5d7f9bc5e6
/// @example @include font-face(Samplino, fonts/Samplino);
//   String Replace
@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}
// Font Face
@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
  $src: null;

  $extmods: (
      eot: "?",
      svg: "#" + str-replace($name, " ", "_")
  );

  $formats: (
      otf: "opentype",
      ttf: "truetype"
  );

  @each $ext in $exts {
    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
    $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
  }

  @font-face {
    font-family: quote($name);
    font-style: $style;
    font-weight: $weight;
    src: $src;
  }
}

/// Mixin define size about logo company
@mixin imgSizeLogo{
  width: 170px;
  height: 82px;
}